import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { Leaf, ShoppingBag, Truck } from 'lucide-react';

const UserTypeScreen = () => {
  const navigate = useNavigate();
  const [selectedType, setSelectedType] = useState(null);
  const [isLoading, setIsLoading] = useState(false);

  const userTypes = [
    {
      id: 'farmer',
      title: 'Farmer',
      description: 'I grow and sell agricultural products',
      icon: <Leaf className="h-12 w-12 text-green-600" />,
      bgColor: 'bg-green-100',
      borderColor: 'border-green-300'
    },
    {
      id: 'buyer',
      title: 'Buyer',
      description: 'I purchase agricultural products',
      icon: <ShoppingBag className="h-12 w-12 text-blue-600" />,
      bgColor: 'bg-blue-100',
      borderColor: 'border-blue-300'
    },
    {
      id: 'transporter',
      title: 'Transporter',
      description: 'I provide transport services',
      icon: <Truck className="h-12 w-12 text-orange-600" />,
      bgColor: 'bg-orange-100',
      borderColor: 'border-orange-300'
    }
  ];

  const handleContinue = async () => {
    if (!selectedType) return;
    
    setIsLoading(true);
    
    try {
      // API call would go here to update user profile with selected type
      // const response = await updateUserType(selectedType);
      
      // Simulate API call
      await new Promise(resolve => setTimeout(resolve, 1000));
      
      // Navigate to phone verification after user type selection
      navigate('/phone-verification');
    } catch (err) {
      console.error('Error updating user type:', err);
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-green-50 flex flex-col justify-center py-12 px-4 sm:px-6 lg:px-8">
      <div className="sm:mx-auto sm:w-full sm:max-w-md">
        <img
          className="mx-auto h-16 w-auto"
          src="/api/placeholder/120/120"
          alt="MkulimaMarket"
        />
        <h2 className="mt-6 text-center text-3xl font-bold text-gray-900">
          Select your role
        </h2>
        <p className="mt-2 text-center text-sm text-gray-600">
          Choose how you'll use MkulimaMarket
        </p>
      </div>

      <div className="mt-8 sm:mx-auto sm:w-full sm:max-w-md">
        <div className="bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10">
          <div className="space-y-4">
            {userTypes.map((type) => (
              <div
                key={type.id}
                className={`relative border-2 rounded-lg p-4 cursor-pointer transition-all ${
                  selectedType === type.id
                    ? `${type.bgColor} ${type.borderColor} border-2`
                    : 'border-gray-200 hover:border-gray-300'
                }`}
                onClick={() => setSelectedType(type.id)}
              >
                <div className="flex items-center">
                  <div className={`p-3 rounded-full ${type.bgColor}`}>
                    {type.icon}
                  </div>
                  <div className="ml-4">
                    <h3 className="text-lg font-medium text-gray-900">{type.title}</h3>
                    <p className="text-sm text-gray-500">{type.description}</p>
                  </div>
                  <div className="ml-auto">
                    <div className={`h-6 w-6 border-2 rounded-full flex items-center justify-center ${
                      selectedType === type.id
                        ? `${type.borderColor} bg-white`
                        : 'border-gray-300'
                    }`}>
                      {selectedType === type.id && (
                        <div className="h-3 w-3 rounded-full bg-green-600"></div>
                      )}
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>

          <div className="mt-8">
            <button
              onClick={handleContinue}
              disabled={!selectedType || isLoading}
              className={`w-full flex justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 ${
                !selectedType || isLoading ? 'opacity-50 cursor-not-allowed' : ''
              }`}
            >
              {isLoading ? 'Processing...' : 'Continue'}
            </button>
          </div>

          <div className="mt-4 text-center">
            <p className="text-sm text-gray-500">
              You can change your role later in settings
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default UserTypeScreen;
