import React, { useState, useEffect } from 'react';
import { UserCircle, Edit, ChevronRight, Star, Package, Truck, Calendar } from 'lucide-react';

const ProfileScreen = () => {
  const [user, setUser] = useState(null);
  const [isLoading, setIsLoading] = useState(true);
  const [stats, setStats] = useState({
    completedTransactions: 0,
    activeListings: 0,
    averageRating: 0,
    totalSales: 0
  });

  // Fetch user data when component mounts
  useEffect(() => {
    const fetchUserData = async () => {
      try {
        // This would be replaced with an actual API call
        // await api.get('/users/profile')
        setIsLoading(false);
        
        // Mock data for demonstration
        setUser({
          id: '12345',
          fullName: 'David Kimani',
          userType: 'farmer',
          location: 'Kiambu County',
          phoneNumber: '+254712345678',
          email: 'david.kimani@example.com',
          profileImageUrl: null,
          verificationLevel: 'standard',
          joinDate: '2024-07-15',
          primaryCrops: ['Tomatoes', 'Capsicum', 'Kale'],
          farmSize: '0.8 hectares'
        });
        
        setStats({
          completedTransactions: 28,
          activeListings: 3,
          averageRating: 4.7,
          totalSales: 45000
        });
      } catch (error) {
        console.error('Error fetching user data:', error);
        setIsLoading(false);
      }
    };

    fetchUserData();
  }, []);

  if (isLoading) {
    return (
      <div className="flex items-center justify-center h-screen">
        <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-green-700"></div>
      </div>
    );
  }

  if (!user) {
    return (
      <div className="p-4 text-center">
        <p>Could not load profile information. Please try again.</p>
        <button className="mt-4 bg-green-600 text-white px-4 py-2 rounded-lg">
          Retry
        </button>
      </div>
    );
  }

  const verificationBadge = () => {
    switch (user.verificationLevel) {
      case 'basic':
        return <span className="text-xs bg-gray-200 text-gray-700 px-2 py-1 rounded-full">Basic</span>;
      case 'standard':
        return <span className="text-xs bg-green-200 text-green-700 px-2 py-1 rounded-full">Verified</span>;
      case 'enhanced':
        return <span className="text-xs bg-blue-200 text-blue-700 px-2 py-1 rounded-full">Enhanced</span>;
      default:
        return null;
    }
  };

  return (
    <div className="bg-gray-100 min-h-screen pb-6">
      {/* Profile Header */}
      <div className="bg-white p-4 shadow-sm">
        <div className="flex items-center">
          {user.profileImageUrl ? (
            <img 
              src={user.profileImageUrl} 
              alt={user.fullName} 
              className="w-16 h-16 rounded-full object-cover"
            />
          ) : (
            <UserCircle className="w-16 h-16 text-gray-400" />
          )}
          
          <div className="ml-4 flex-1">
            <div className="flex items-center justify-between">
              <h1 className="text-xl font-semibold">{user.fullName}</h1>
              <button className="text-green-600">
                <Edit size={18} />
              </button>
            </div>
            <div className="flex items-center mt-1">
              <span className="text-sm text-gray-600 capitalize">{user.userType}</span>
              <div className="ml-2">{verificationBadge()}</div>
            </div>
            <p className="text-sm text-gray-600 mt-1">{user.location}</p>
          </div>
        </div>
      </div>
      
      {/* Stats Section */}
      <div className="bg-white mt-4 p-4 shadow-sm">
        <h2 className="text-lg font-semibold mb-3">Activity Overview</h2>
        <div className="grid grid-cols-2 gap-4">
          <div className="bg-green-50 p-3 rounded-lg">
            <div className="flex items-center">
              <Package className="w-5 h-5 text-green-600" />
              <span className="ml-2 text-sm text-gray-700">Transactions</span>
            </div>
            <p className="text-xl font-semibold mt-2">{stats.completedTransactions}</p>
          </div>
          
          <div className="bg-blue-50 p-3 rounded-lg">
            <div className="flex items-center">
              <Star className="w-5 h-5 text-blue-600" />
              <span className="ml-2 text-sm text-gray-700">Rating</span>
            </div>
            <p className="text-xl font-semibold mt-2">{stats.averageRating}/5</p>
          </div>
          
          <div className="bg-amber-50 p-3 rounded-lg">
            <div className="flex items-center">
              <Truck className="w-5 h-5 text-amber-600" />
              <span className="ml-2 text-sm text-gray-700">Active Listings</span>
            </div>
            <p className="text-xl font-semibold mt-2">{stats.activeListings}</p>
          </div>
          
          <div className="bg-purple-50 p-3 rounded-lg">
            <div className="flex items-center">
              <Calendar className="w-5 h-5 text-purple-600" />
              <span className="ml-2 text-sm text-gray-700">Member Since</span>
            </div>
            <p className="text-sm font-semibold mt-2">
              {new Date(user.joinDate).toLocaleDateString('en-GB', { 
                year: 'numeric', 
                month: 'short'
              })}
            </p>
          </div>
        </div>
      </div>
      
      {/* Farmer Details Section - Only for farmers */}
      {user.userType === 'farmer' && (
        <div className="bg-white mt-4 p-4 shadow-sm">
          <h2 className="text-lg font-semibold mb-3">Farm Details</h2>
          
          <div className="border-b pb-3">
            <p className="text-sm text-gray-600">Farm Size</p>
            <p className="font-medium">{user.farmSize}</p>
          </div>
          
          <div className="pt-3">
            <p className="text-sm text-gray-600">Primary Crops</p>
            <div className="flex flex-wrap gap-2 mt-1">
              {user.primaryCrops.map((crop, index) => (
                <span key={index} className="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">
                  {crop}
                </span>
              ))}
            </div>
          </div>
        </div>
      )}
      
      {/* Contact Information */}
      <div className="bg-white mt-4 p-4 shadow-sm">
        <h2 className="text-lg font-semibold mb-3">Contact Information</h2>
        
        <div className="border-b pb-3">
          <p className="text-sm text-gray-600">Phone Number</p>
          <p className="font-medium">{user.phoneNumber}</p>
        </div>
        
        {user.email && (
          <div className="pt-3">
            <p className="text-sm text-gray-600">Email</p>
            <p className="font-medium">{user.email}</p>
          </div>
        )}
      </div>
      
      {/* Account Options */}
      <div className="bg-white mt-4 shadow-sm">
        <div className="p-4 border-b">
          <button className="flex justify-between items-center w-full">
            <span className="font-medium text-gray-800">Edit Profile</span>
            <ChevronRight className="w-5 h-5 text-gray-500" />
          </button>
        </div>
        
        <div className="p-4 border-b">
          <button className="flex justify-between items-center w-full">
            <span className="font-medium text-gray-800">Verification Level</span>
            <ChevronRight className="w-5 h-5 text-gray-500" />
          </button>
        </div>
        
        <div className="p-4 border-b">
          <button className="flex justify-between items-center w-full">
            <span className="font-medium text-gray-800">Payment Methods</span>
            <ChevronRight className="w-5 h-5 text-gray-500" />
          </button>
        </div>
        
        <div className="p-4">
          <button className="flex justify-between items-center w-full">
            <span className="font-medium text-gray-800">Help & Support</span>
            <ChevronRight className="w-5 h-5 text-gray-500" />
          </button>
        </div>
      </div>
      
      {/* Logout Button */}
      <div className="px-4 mt-6">
        <button className="w-full py-3 bg-red-100 text-red-600 font-medium rounded-lg">
          Log Out
        </button>
      </div>
    </div>
  );
};

export default ProfileScreen;
