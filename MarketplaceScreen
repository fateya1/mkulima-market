import React, { useState } from 'react';

const MarketplaceScreen = ({ navigateToListing }) => {
  const [searchQuery, setSearchQuery] = useState('');
  const [activeCategory, setActiveCategory] = useState('all');
  
  // Example product categories
  const categories = [
    { id: 'all', name: 'All' },
    { id: 'staples', name: 'Staples' },
    { id: 'vegetables', name: 'Vegetables' },
    { id: 'fruits', name: 'Fruits' },
    { id: 'root-crops', name: 'Root Crops' }
  ];
  
  // Example product listings data
  const listings = [
    {
      id: '1',
      title: 'Fresh Maize',
      location: 'Nakuru County',
      price: 45,
      unit: 'kg',
      quantity: 500,
      image: '/api/placeholder/80/80',
      seller: {
        name: 'David Kimani',
        rating: 4.7,
        verified: true
      },
      postedDate: '2 hours ago'
    },
    {
      id: '2',
      title: 'Grade A Potatoes',
      location: 'Nyandarua',
      price: 35,
      unit: 'kg',
      quantity: 200,
      image: '/api/placeholder/80/80',
      seller: {
        name: 'Sarah Wanjiku',
        rating: 4.3,
        verified: true
      },
      postedDate: '5 hours ago'
    },
    {
      id: '3',
      title: 'Fresh Tomatoes',
      location: 'Machakos',
      price: 90,
      unit: 'kg',
      quantity: 100,
      image: '/api/placeholder/80/80',
      seller: {
        name: 'John Mwangi',
        rating: 4.8,
        verified: false
      },
      postedDate: '1 day ago'
    },
    {
      id: '4',
      title: 'Kales (Sukuma Wiki)',
      location: 'Kakamega',
      price: 25,
      unit: 'bunch',
      quantity: 50,
      image: '/api/placeholder/80/80',
      seller: {
        name: 'Mary Atieno',
        rating: 4.5,
        verified: true
      },
      postedDate: '3 hours ago'
    },
    {
      id: '5',
      title: 'Ripe Bananas',
      location: 'Kisii',
      price: 250,
      unit: 'bunch',
      quantity: 30,
      image: '/api/placeholder/80/80',
      seller: {
        name: 'Peter Omondi',
        rating: 4.9,
        verified: true
      },
      postedDate: '12 hours ago'
    }
  ];
  
  const filteredListings = listings.filter(listing => 
    listing.title.toLowerCase().includes(searchQuery.toLowerCase())
  );
  
  return (
    <div className="bg-gray-100 min-h-screen pb-20">
      {/* Header */}
      <div className="bg-green-600 pt-10 pb-4 px-4">
        <h1 className="text-white text-xl font-bold mb-4">MkulimaMarket</h1>
        
        {/* Search Bar */}
        <div className="relative">
          <input
            type="text"
            placeholder="Search for products..."
            className="w-full bg-white rounded-full py-2 px-4 pl-10"
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
          />
          <svg className="w-5 h-5 text-gray-500 absolute left-3 top-2.5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
          </svg>
        </div>
      </div>
      
      {/* Category Selector */}
      <div className="px-2 py-4 overflow-x-auto">
        <div className="flex space-x-2">
          {categories.map(category => (
            <button
              key={category.id}
              className={`px-4 py-1 rounded-full text-sm whitespace-nowrap ${
                activeCategory === category.id 
                  ? 'bg-green-600 text-white' 
                  : 'bg-white text-gray-700 border border-gray-300'
              }`}
              onClick={() => setActiveCategory(category.id)}
            >
              {category.name}
            </button>
          ))}
        </div>
      </div>
      
      {/* Product Listings */}
      <div className="px-4">
        {filteredListings.length === 0 ? (
          <div className="text-center py-8">
            <svg className="w-16 h-16 text-gray-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            <p className="text-gray-500">No products found. Try a different search.</p>
          </div>
        ) : (
          <div className="grid grid-cols-1 gap-4">
            {filteredListings.map(listing => (
              <div 
                key={listing.id} 
                className="bg-white rounded-lg shadow-md overflow-hidden"
                onClick={() => navigateToListing && navigateToListing(listing.id)}
              >
                <div className="flex">
                  <div className="h-24 w-24 flex-shrink-0">
                    <img 
                      src={listing.image} 
                      alt={listing.title} 
                      className="h-full w-full object-cover"
                    />
                  </div>
                  <div className="p-3 flex-1">
                    <div className="flex justify-between items-start">
                      <h3 className="font-medium text-gray-900">{listing.title}</h3>
                      <span className="font-bold text-green-600">
                        KES {listing.price}/{listing.unit}
                      </span>
                    </div>
                    <div className="flex items-center mt-1 text-xs text-gray-500">
                      <svg className="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                      </svg>
                      {listing.location}
                    </div>
                    <div className="mt-2 flex items-center justify-between">
                      <div className="flex items-center">
                        <span className="text-xs text-gray-500 mr-1">Seller:</span>
                        <span className="text-xs font-medium flex items-center">
                          {listing.seller.name}
                          {listing.seller.verified && (
                            <svg className="w-3 h-3 ml-1 text-blue-500" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                              <path fillRule="evenodd" d="M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812c.051.643.304 1.254.723 1.745a3.066 3.066 0 010 3.976 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                            </svg>
                          )}
                        </span>
                      </div>
                      <span className="text-xs text-gray-500">{listing.postedDate}</span>
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>
        )}
      </div>
    </div>
  );
};

export default MarketplaceScreen;
